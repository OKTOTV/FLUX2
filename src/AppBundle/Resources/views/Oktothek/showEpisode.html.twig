{% extends "BprsStyleBundle::layout.html.twig" %}
{% block metas %}
<meta property="og:url" content="{{ url('oktothek_show_episode', {'uniqID': episode.uniqID })}}" />
<meta property="og:title" content="{{ episode.name }}" />
<meta property="og:description" content="{{ episode.description }}" />
<meta property="og:image" content="{{ episode.posterframe|path() }}" />
{% endblock %}

{% block title %}{{ name|default('OKTO')~' | '~ episode.name }}{% endblock %}

{% block nav_head%}
    {% include 'BprsStyleBundle::menu.html.twig' with {'selected': 'oktothek', 'dropdown': ''} %}
{% endblock %}

{% set body_class = "episode head-white-color" %}
{% block body %}
    <div id="top"></div>
    <div class="container-fluid">
        <section class="container">
            <figure id="player">
                {% if episode.video is empty %}
                    <img src="{{ episode.posterframe|path }}" class="img-responsive" />
                {% endif %}
            </figure>
			<article>
                <p class="series">
                    <a href="{{ path('oktothek_show_series', {'uniqID': episode.series.uniqID}) }}" title="Mehr über {{ episode.series.name }} erfahren">{{ episode.series.name }}</a>
                </p>
                <h1 class="name">{{ episode.name }}</h1>
                <time pubdate="pubdate">online seit {{ episode.onlineStart|date('d.m.Y')}}</time>
                <p class="description">
                    {{ episode.description }}
                </p>
                <p class="misc">
                    {% if app.user is empty %}

                    {% else %}
                        <button type="button" class="btn btn-default like-it" id="favorite" data-uniqID="{{episode.uniqID}}" title="Favorite Video" data-favorites="{{ episode.users|length }}" data-fav="{% if episode in app.user.favorites %}1{% else %}0{% endif %}"><span class="glyphicon {% if episode in app.user.favorites %}glyphicon-heart choosen{% else %}glyphicon-heart{% endif %}"></span> {{ episode.users|length}}</button>
                        {% set in_abo = false %}
                        {% for abonnement in app.user.abonnements if abonnement.series.uniqID == episode.series.uniqID %}
                            {% set in_abo = true %}
                        {% endfor %}
                        {% if in_abo %}
                            <button type="button" class="btn btn-default" id="subscribe" title="{{ episode.series.name }} abbonieren" data-subscribed="1">{{ 'oktothek_user_unsubscribe'|trans|raw }}</button>
                        {% else %}
                            <button type="button" class="btn btn-default" id="subscribe" title="{{ episode.series.name }} abbonieren" data-subscribed="0">{{ 'oktothek_user_subscribe'|trans|raw }}</button>
                        {% endif %}
                        <button type="button" class="btn btn-default" data-toggle="collapse" data-target="#collapsePlaylistArea" aria-expanded="false" aria-controls="collapsePlaylistArea" id="ButtonPlaylist" data-uniqID="{{episode.uniqID}}" title="{{ episode.name }} zur Playlist hinzuf&uuml;gen">Hinzufügen</button>
                    {% endif %}
                    <button type="button" class="btn btn-default" data-toggle="collapse" data-target="#collapseShareArea" aria-expanded="false" aria-controls="collapseShareArea" id="ButtonShare" data-uniqID="{{episode.uniqID}}" title="{{ episode.name }} teilen">Teilen</button>
                </p>
				<!-- Start Collapse Share-->
                    {% include 'AppBundle:Oktothek:snippetEpisodeShare.html.twig' with {'episode': episode} %}
				<!-- End Modal Window Share-->
				<!-- Start Modal Window Playlist-->
                    {% include 'AppBundle:Oktothek:snippetPlaylist.html.twig' %}
				<!-- End Modal Window Playlist-->
			</article>
        </section>
		<!-- Kommentare -->
		<section class="comments body-white-color comment-pager">
		    <div class="container">
                {{ render(controller("AppBundle:Comment:commentPager", {'uniqID': episode.uniqID, 'page': 1})) }}
		    </div>
		</section>
        <!-- Ende Kommentare -->
		<section class="container tags">
		    <h2>{{ 'oktothek.episode_tag_header'|trans }}</h2>
		    <ul>
                {% for tag in episode.tags %}
                    <li><a href="{{ path('oktothek_tag_show', {'slug': tag.slug})}}">{{ tag.text}}</a>
                {% endfor %}
			</ul>
		</section>

        <!-- Weitere Episoden der Serie Start -->
		<div id="anchor_series"></div>
		{{ render(controller("AppBundle:Series:episodesWithTagsAjax", {'uniqID': episode.series.uniqID})) }}
        <!-- Weitere Episoden der Serie Ende -->
	</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ player(episode)|raw }}
    <script type="text/javascript">
        $(document).ready(function(){        
            // add/remove from favorites
            $('#favorite').click(function(e){
                e.preventDefault();
                $.ajax({
                    url: "{{ path('user_update_favorite') }}",
                    data:   {'uniqID': '{{ episode.uniqID}}'},
                    type: 'POST',
                    success: function(data) {
                        var button = $('#favorite');
                        var favorites = button.attr('data-favorites');
                        if (button.attr('data-fav') == '1') {
                            console.log('now unfav');
                            button.attr('data-fav', '0');
                            var text = "<span class='glyphicon glyphicon-heart-empty'></span> "+ favorites;
                            button.html(text);
                        } else {
                            console.log('now fav');
                            button.attr('data-fav', '1');
                            var text = "<span class='glyphicon glyphicon-heart'></span> "+ (parseInt(favorites)+1);
                            button.html(text);
                        }
                    }
                })
            });

            // subscribe/unsubscribe
            $('#subscribe').click(function(e){
                e.preventDefault();
                $.ajax({
                    url: "{{ path('user_update_subscription') }}",
                    data: { 'uniqID': '{{ episode.series.uniqID }}'},
                    type: 'POST',
                    success: function(data) {
                        var button = $('#subscribe');
                        if (button.attr('data-subscribed') == '1') {
                            console.log('now unsubscribed');
                            button.attr('data-subscribed', '0');
                            button.text('{{'oktothek_user_subscribe'|trans|raw}}');
                        } else {
                            console.log('now subscribed');
                            button.attr('data-subscribed', '1');
                            button.text('{{'oktothek_user_unsubscribe'|trans|raw }}');
                        }
                    }
                })
            });
        });

        $(document).on('click', '.playlist', function(e){
            var playlist = $(this);
            if (playlist.hasClass('active')) {
                $.ajax({
                    url: "{{ path('oktothek_playlist_ajax') }}",
                    data: {
                        'uniqID': playlist.attr('data-uniqID'),
                        'episodeID': "{{ episode.uniqID }}",
                        'action': 'remove'
                    },
                    type: 'POST',
                    success: function(data) {
                        playlist.removeClass('active');
                        playlist.text('+');
                    }
                });
            } else {
                $.ajax({
                    url: "{{ path('oktothek_playlist_ajax') }}",
                    data: {
                        'uniqID': playlist.attr('data-uniqID'),
                        'episodeID': "{{ episode.uniqID }}",
                        'action': 'add'
                    },
                    type: 'POST',
                    success: function(data) {
                        playlist.addClass('active');
                        playlist.text('-');
                    }
                });
            }
        });

        $(document).on('click', '.playlist-new', function(e){
            var playlist = $(this).parents('.input-group').children('input');
            var item = playlist.attr('data-prototype');
            item = item.replace(/__name__/g, playlist.val());
            $.ajax({
                url: "{{ path('oktothek_playlist_new')}}",
                data: {
                    'name': playlist.val(),
                    'uniqID': "{{ episode.uniqID }}"
                },
                type: 'POST',
                success: function(data) {
                    $('.playlists').append(item);
                    playlist.val('');
                }
            })
        });

        // AJAX pagination
        $( document ).on('click', '.pagination > li > a', function(e){
            e.preventDefault();
            var link = $(this);
            $.ajax({
                url: link.attr('href'),
                context: document.body
            }).success(function(data) {
                $(link.parents('.comment-pager')).replaceWith(data);
            });
        });

        $(document).on('change', '#episode-tag', function(){
            var optionSelected = $("option:selected", this);
            var slug = $(optionSelected).attr('data-slug');
            $.ajax({
                url: "{{ path('oktothek_series_episodes_with_tags_ajax', {'uniqID': episode.series.uniqID}) }}",
                data: {'tag': slug},
                type: 'POST',
                success: function(data) {
                    $('#episode-tag-stack').replaceWith('<div id="episode-tag-stack">'+data+'<div>');
                }
            })
        });
    </script>
{% endblock %}
