<?php

namespace Bprs\AnalyticsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LogstateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogstateRepository extends EntityRepository
{
    public function getNumberOfRefreshes($client_ip, $url, $from = '-5 minutes', $to = 'now')
    {
        $from = new \Datetime($from);
        $to = new \Datetime($to);

        return $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(l) FROM BprsAnalyticsBundle:Logstate l
                WHERE l.url = :url
                AND (l.timestamp >= :start_time AND l.timestamp <= :end_time)
                AND l.clientIp = :client_ip'
            )
            ->setParameter('url', $url)
            ->setParameter('start_time', $from)
            ->setParameter('end_time', $to)
            ->setParameter('client_ip', $client_ip)
            ->getSingleScalarResult();
    }

    public function getLogstatesInTime(array $values, $from = '-1 day', $to = 'now')
    {
        $from = new \Datetime($from);
        $to = new \Datetime($to);

        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('l')
            ->from('BprsAnalyticsBundle:Logstate', 'l')
            ->where($queryBuilder->expr()->andX(
                $queryBuilder->expr()->gte('l.timestamp', ':start_time'),
                $queryBuilder->expr()->lte('l.timestamp', ':end_time')
                )
            );
        $queryBuilder->setParameter('start_time', $from);
        $queryBuilder->setParameter('end_time', $to);
        $queryBuilder->orderBy('l.timestamp', 'ASC');

        foreach ($values as $key => $value) {
            $queryBuilder->andWhere($queryBuilder->expr()->eq('l.'.$key, ':'.$key));
            $queryBuilder->setParameter($key, $value);
        }

        return $queryBuilder->getQuery()->getResult();
    }

    public function getCountOfLogstatesInTime(array $values, $from = '-1 day', $to = 'now')
    {
        $from = new \Datetime($from);
        $to = new \Datetime($to);

        $queryBuilder = $this->getEntityManager()->createQueryBuilder();
        $queryBuilder->select('count(l.id)')
            ->from('BprsAnalyticsBundle:Logstate', 'l')
            ->where($queryBuilder->expr()->andX(
                $queryBuilder->expr()->gte('l.timestamp', ':start_time'),
                $queryBuilder->expr()->lte('l.timestamp', ':end_time')
                )
            );
        $queryBuilder->setParameter('start_time', $from);
        $queryBuilder->setParameter('end_time', $to);

        foreach ($values as $key => $value) {
            $queryBuilder->andWhere($queryBuilder->expr()->eq('l.'.$key, ':'.$key));
            $queryBuilder->setParameter($key, $value);
        }

        return $queryBuilder->getQuery()->getSingleScalarResult();
    }
}
